
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: warehouse_app
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn warehouse.wsgi:application --bind 0.0.0.0:8000
      "
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: always

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_worker
    command: celery -A warehouse worker --loglevel=info
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - backend
      - redis
    restart: always

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_beat
    command: celery -A warehouse beat --loglevel=info
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - backend
      - redis
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_app
    command: >
      sh -c "
       npm i && npm run dev
       " 
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - backend
    restart: always

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: app_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always

volumes:
  pgdata:
  static_volume:
